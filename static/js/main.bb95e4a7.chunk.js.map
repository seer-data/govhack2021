{"version":3,"sources":["components/GameWelcome.tsx","index.tsx"],"names":["required","value","undefined","mustBeNumber","isNaN","composeValidators","validators","reduce","error","validator","getStateFromPostcode","postcode","FieldInput","input","meta","label","placeholder","style","marginBottom","Input","touched","content","pointing","FieldSelect","options","Dropdown","onChange","_","data","console","log","selection","damData","volume","capacity","GameWelcome","useState","panel","setPanel","formData","setFormData","closestDam","age","showerMinutes","timesHandsWashed","washingType","damPercentFull","Math","round","positiveOutcome","random","margin","width","maxHeight","textAlign","onSubmit","values","render","handleSubmit","form","submitting","pristine","Message","color","marginTop","name","validate","component","type","Button","className","backgroundColor","basic","icon","disabled","key","text","height","position","border","borderTop","bottom","Label","left","top","transform","Icon","fill","paused","amplitude","speed","points","onClick","role","aria-label","fontSize","src","minWidth","maxWidth","minHeight","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bb95e4a7.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport Wave from \"react-wavify\";\nimport { Button, Input, Message, Form as SemanticForm, Dropdown, Label, Icon } from \"semantic-ui-react\";\nimport { Form, Field } from \"react-final-form\";\n\nconst required = (value) => (value ? undefined : \"Required\");\nconst mustBeNumber = (value) => (isNaN(value) ? \"Must be a number\" : undefined);\nconst minValue = (min) => (value) =>\n  isNaN(value) || value >= min ? undefined : `Should be greater than ${min}`;\nconst composeValidators = (...validators) => (value) =>\n  validators.reduce((error, validator) => error || validator(value), undefined);\n\nconst getStateFromPostcode = (postcode) => {\n    if (postcode >= 3000) {\n        return \"VIC\";\n    } else if (postcode >= 2000) {\n        return \"NSW\";\n    } else {\n        return \"NSW\";\n    }\n}\n\nconst FieldInput = ({ input, meta, label, placeholder }) => (\n  <div style={{ marginBottom: \"1rem\" }}>\n    <h4>{label}</h4>\n    <SemanticForm.Input\n      {...input}\n      placeholder={placeholder || \"\"}\n      error={(meta.error && meta.touched) ? { content: meta.error, pointing: \"above\" } : undefined}\n    />\n  </div>\n);\n\nconst FieldSelect = ({ input, meta, label, placeholder, options }) => (\n  <div style={{ marginBottom: \"1rem\" }}>\n    <h4>{label}</h4>\n    <Dropdown\n      {...input}\n      onChange={(_, data) => {\n        console.log(data);\n        input.onChange(data?.value);\n      }}\n      selection\n      options={options}\n      placeholder={placeholder || \"\"}\n      error={meta.error && meta.touched}\n    />\n  </div>\n);\n\nconst constants = {\n  sydneyPopulation: 5312163, // people\n  sydneyPopDensity: 430, // people per square km\n  usageData: {\n    regularShowerhead: 10, // L/min\n    efficientShowerhead: 6.5, // L/min\n    frontLoader: 65, // L per wash\n    topLoader: 110, // L per wash\n    handWashing: 2, // L for a 30 second hand washing\n  }\n};\n\nconst damData = {\n  \"Woronora Dam\": {\n    volume: 57854,\n    capacity: 71790, // capacity\n  },\n  \"Warragamba Dam\": {\n    volume: 1955246,\n    capacity: 2027000,\n  }\n}\n\nconst getClosestDam = (postcode) => {\n  const closest = \"Woronora Dam\";\n  return damData[closest];\n}\n\nexport const GameWelcome = () => {\n\n    const [panel, setPanel] = useState(1);\n    const [formData, setFormData] = useState<any>({});\n    const { postcode, age, showerMinutes, timesHandsWashed, washingType } = formData || {};\n    const closestDam = getClosestDam(postcode || 2000);\n    const damPercentFull = Math.round(closestDam.volume / closestDam.capacity * 100);\n    console.log(formData);\n\n    const positiveOutcome = () => {\n        const rand = Math.random();\n\n        if (rand > 0.5) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return (\n        <div>\n            <div style={{ margin: \"100px auto\", width: \"80vw\", maxHeight: \"50vw\", textAlign: \"center\" }}>\n\n              <div style={{ width: 600, margin: \"0 auto\" }}>\n                {/* AGE & POSTCODE */}\n                {panel === 1 &&\n                <Form\n                  // initialValues={{ postcode: 3000, age: 18 }}\n                  onSubmit={values => {\n                    console.log(values);\n                    setFormData({ ...formData, ...values });\n                    setPanel(2);\n                  }}\n                  render={({ handleSubmit, form, submitting, pristine, values }) => (\n                    <SemanticForm onSubmit={handleSubmit}>\n                      <h1>Are you a Water Warrior?</h1>\n                      <Message color=\"blue\">\n                        Learn about how to save water!\n                      </Message>\n\n                      <div style={{ marginTop: \"100px\" }}>\n                        <Field\n                          name=\"postcode\"\n                          label=\"What's your postcode?\"\n                          validate={composeValidators(required, mustBeNumber)}\n                          component={FieldInput}\n                          placeholder=\"Eg. 2113\"\n                          type=\"number\"\n                        />\n\n                        <Field\n                          name=\"age\"\n                          label=\"How old are you?\"\n                          validate={composeValidators(required, mustBeNumber)}\n                          component={FieldInput}\n                          placeholder=\"Eg. 16\"\n                          type=\"number\"\n                        />\n                      </div>\n\n                      <Button\n                        type=\"submit\"\n                        className=\"ui button purple\"\n                        style={{ marginTop: \"40px\", backgroundColor: \"#8189e8\" }}\n                        // color='olive'\n                        content=\"Let's find out...\"\n                        // icon='arrow right'\n                        label={{ basic: true, color: '#8189e8', pointing: 'left', content: \"Next\", icon: 'arrow right' }}\n                        disabled={!values.postcode || !values.age}\n                      />\n                    </SemanticForm>\n                  )}\n                />\n                }\n              </div>\n\n              <div style={{ width: 600, margin: \"0 auto\" }}>\n                {/* MAIN QUESTIONS */}\n                {panel === 2 &&\n                <Form\n                  // initialValues={{ showerMinutes: 10, timesHandsWashed: 18, washingType: \"Top-Loader\" }}\n                  onSubmit={values => {\n                    console.log(values);\n                    setFormData({ ...formData, ...values });\n                    setPanel(3);\n                  }}\n                  render={({ handleSubmit, form, submitting, pristine, values }) => (\n                    <SemanticForm onSubmit={handleSubmit}>\n                      <h1>Are you a Water Warrior?</h1>\n\n                      <div style={{ marginTop: \"100px\" }}>\n                        <Field\n                          name=\"showerMinutes\"\n                          label=\"How many minutes do you usually shower for?\"\n                          validate={composeValidators(required, mustBeNumber)}\n                          component={FieldInput}\n                          placeholder=\"Eg. 20\"\n                          type=\"number\"\n                        />\n                        <Field\n                          name=\"timesHandsWashed\"\n                          label=\"How many times a day do you wash your hands?\"\n                          validate={composeValidators(required, mustBeNumber)}\n                          component={FieldInput}\n                          placeholder=\"Eg. 8\"\n                          type=\"number\"\n                        />\n                        <Field\n                          name=\"washingType\"\n                          label=\"Does your household use a front loader washing machine or top loader?\"\n                          validate={composeValidators(required)}\n                          component={FieldSelect}\n                          placeholder=\"Eg. Top\"\n                          options={[\n                            { key: \"Top-Loader\", text: \"Top-Loader\", value: \"Top-Loader\" },\n                            { key: \"Front-Loader\", text: \"Front-Loader\", value: \"Front-Loader\" }\n                          ]}\n                        />\n                      </div>\n\n                      <Button\n                        type=\"submit\"\n                        className=\"ui button purple\"\n                        style={{ marginTop: \"40px\", backgroundColor: \"#8189e8\" }}\n                        // color='olive'\n                        content=\"Let's find out...\"\n                        // icon='arrow right'\n                        label={{ basic: true, color: '#8189e8', pointing: 'left', content: \"Next\", icon: 'arrow right' }}\n                        disabled={!values.showerMinutes || !values.timesHandsWashed || !values.washingType}\n                      />\n                    </SemanticForm>\n                  )}\n                />\n                }\n              </div>\n\n                {/* CURRENT DAM STATUS */}\n                {panel === 3 &&\n                    <>\n                        <h1>Here's what your closest dam looks like now ...</h1>\n\n                        <div style={{\n                            width: \"300px\", height: \"300px\", position: \"relative\",\n                            border: \"1px black solid\", borderTop: \"none\", margin: \"0 auto\"\n                        }}>\n                            <div style={{\n                                bottom: 0, height: \"100%\", width: \"100%\",\n                                // backgroundColor: \"blue\",\n                                position: \"absolute\"\n                            }}>\n                              <Label style={{ position: \"absolute\", left: \"50%\", top: \"50%\", transform: \"translate(-50%, -50%)\" }} color=\"blue\">\n                                <Icon name=\"tint\" />{damPercentFull}%\n                              </Label>\n                                <Wave\n                                    style={{ height: \"100%\" }}\n                                    fill='#52bfff'\n                                    paused={false}\n                                    options={{\n                                        height: damPercentFull,\n                                        amplitude: 20,\n                                        speed: 0.1,\n                                        points: 3\n                                    }}\n                                />\n                            </div>\n                        </div>\n\n                        <Button\n                            className=\"ui button purple\"\n                            style={{ marginTop: \"40px\", backgroundColor: \"#8189e8\" }}\n                            // color='olive'\n                            content=\"Let's see what it will look like tomorrow...\"\n                            // icon='arrow right'\n                            label={{ basic: true, color: '#8189e8', pointing: 'left', content: \"Next\", icon: 'arrow right' }}\n                            onClick={() => setPanel(4)}\n                        />\n                    </>\n                }\n\n                {/* AFTER USAGE DAM LEVELS */}\n                {panel === 4 &&\n                    <>\n                        <h1>If everyone in {getStateFromPostcode(postcode)} had the same usage as you, here's what would be left ...</h1>\n\n                        {positiveOutcome() &&\n                            <p role=\"img\" aria-label=\"scared emoji\" style={{ fontSize: \"5rem\", margin: 0 }}>\n                                😨\n                            </p>\n                        }\n\n                        <div style={{\n                            width: \"300px\", height: \"300px\", position: \"relative\",\n                            border: \"1px black solid\", borderTop: \"none\", margin: \"0 auto\"\n                        }}>\n                            <div style={{\n                                bottom: 0, height: \"50px\", width: \"100%\",\n                                // backgroundColor: \"blue\",\n                                position: \"absolute\"\n                            }}>\n                                <h1 style={{ position: \"absolute\", left: \"125px\" }}>10%</h1>\n                                <Wave\n                                    style={{ height: \"100%\" }}\n                                    fill='#52bfff'\n                                    paused={false}\n                                    options={{\n                                        height: 20,\n                                        amplitude: 20,\n                                        speed: 0.1,\n                                        points: 3\n                                    }}\n                                />\n\n                            </div>\n                        </div>\n\n                        <Button\n                            className=\"ui button purple\"\n                            style={{ marginTop: \"40px\", backgroundColor: \"#8189e8\" }}\n                            // color='olive'\n                            content=\"Help!\"\n                            // icon='arrow right'\n                            label={{ basic: true, color: '#8189e8', pointing: 'left', content: \"What can we do???\", icon: 'arrow right' }}\n                            onClick={() => setPanel(5)}\n                        />\n                    </>\n                }\n\n                {/* OUTCOME PANEL */}\n                {panel === 5 &&\n                    <>\n                        {positiveOutcome() ?\n                            <>\n                                <h1>Congratulations! You are a Water Warrior!</h1>\n\n                                <img src=\"./Thank-you-transparent.svg\" height=\"400px\" />\n\n                                <div>\n                                    <h3>for playing your part to help the {getStateFromPostcode(postcode)} community!</h3>\n                                </div>\n                            </>\n                            :\n                            <>\n                                <h1>Australia's water resources are precious and limited.</h1>\n\n                                <h1>Here's what we can do to help ... </h1>\n\n                                <div style={{ minWidth: \"300px\", maxWidth: \"600px\", margin: \"0 auto\", fontSize: \"20px\" }}>\n                                    <ul style={{}}>\n                                        <li>Take shorter showers (Showers alone make up 26% of our water usage!)</li>\n                                        <li>Don't use sprinklers (Sprinklers use 999 L of water an hour - and no, that's not a typo!)</li>\n                                        <li>Always use the half-flush on a toilet where possible (20% of household water usage goes down the toilet ... literally)</li>\n                                        <li>The next time you're buying a washing machine, get a front loader (front loaders use 65 L of water per load, while top loaders use 110 L of water per load!)</li>\n\n                                    </ul>\n                                </div>\n\n                                <div style={{ marginTop: \"40px\" }}>\n                                    <h2>Thank you for playing your part to help the {getStateFromPostcode(postcode)} community!</h2>\n                                </div>\n                            </>\n                        }\n\n                        <Button\n                            className=\"ui button purple\"\n                            style={{ marginTop: \"40px\", backgroundColor: \"#8189e8\" }}\n                            // color='olive'\n                            content=\"Share this on Facebook\"\n                            // icon='arrow right'\n                            label={{ basic: true, color: '#8189e8', pointing: 'left', content: \"Let's raise awareness\", icon: 'arrow right' }}\n                            onClick={() => setPanel(2)}\n                        />\n                        <p>\n                            <Button\n                                // className=\"ui button purple\"\n                                style={{ marginTop: \"40px\" }}\n                                color='teal'\n                                content=\"Monitor dam levels\"\n                                // icon='arrow right'\n                                label={{ basic: true, color: 'teal', pointing: 'left', content: \"Notify me when it drops\", icon: 'arrow right' }}\n                                onClick={() => setPanel(2)}\n                            />\n                        </p>\n                    </>\n                }\n            </div>\n\n            <div style={{ minHeight: \"50vh\" }}>\n                <Wave\n                    style={{ height: \"50vh\" }}\n                    fill='#52bfff'\n                    paused={false}\n                    options={{\n                        height: 20,\n                        amplitude: 20,\n                        speed: 0.3,\n                        points: 8\n                    }}\n                />\n            </div>\n\n        </div>\n    )\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\n// import reportWebVitals from './reportWebVitals';\n// import { MapTest } from \"./components/MapTest\";\nimport { GameWelcome } from 'components/GameWelcome';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GameWelcome />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}